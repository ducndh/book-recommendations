Author: Duc, Sky

REQUEST: /books

RESPONSE: a random JSON list of four books, each is a dictionary containing the following fields.

	id -- (INTEGER) id of the book
	serial_id -- (INTEGER) id of the series that contain the book
	title -- (TEXT) the title of the book.
	cover_link -- (TEXT) the URL link for the cover picture.
	rating_count -- (INTEGER) number of ratings this book received.
	review_count -- (INTEGER) number of reviews this book received.
	average_rate -- (FLOAT) the average rating that this book received.
	number_of_page -- (INTEGER) number of pages this book has.
	date_published -- (TEXT) publish date for the book
	publisher -- (TEXT) publisher of the book
	isbn13 -- (TEXT)the isbn13 number for the book
	settings -- (TEXT) the background settings of the book.
	characters -- (LIST) major characters in the book
	amazon_link -- (TEXT) the link on Amazon to purchase the book.
	description -- (TEXT) a brief introduction to the book.


REQUEST: /books/order_by_date

RESPONSE: a JSON list of books that is ordered by published date, each is a dictionary containing the following fields.

	id -- (INTEGER) id of the book
	serial_id -- (INTEGER) id of the series that contain the book
	title -- (TEXT) the title of the book.
	cover_link -- (TEXT) the URL link for the cover picture.
	rating_count -- (INTEGER) number of ratings this book received.
	review_count -- (INTEGER) number of reviews this book received.
	average_rate -- (FLOAT) the average rating that this book received.
	number_of_page -- (INTEGER) number of pages this book has.
	date_published -- (TEXT) publish date for the book
	publisher -- (TEXT) publisher of the book
	isbn13 -- (TEXT)the isbn13 number for the book
	settings -- (TEXT) the background settings of the book.
	characters -- (LIST) major characters in the book
	amazon_link -- (TEXT) the link on Amazon to purchase the book.
	description -- (TEXT) a brief introduction to the book.


REQUEST: /books/order_by_rating

RESPONSE: a JSON list of books that is order by rating from best to worse, each is a dictionary containing the following fields.

	id -- (INTEGER) id of the book
	serial_id -- (INTEGER) id of the series that contain the book
	title -- (TEXT) the title of the book.
	cover_link -- (TEXT) the URL link for the cover picture.
	rating_count -- (INTEGER) number of ratings this book received.
	review_count -- (INTEGER) number of reviews this book received.
	average_rate -- (FLOAT) the average rating that this book received.
	number_of_page -- (INTEGER) number of pages this book has.
	date_published -- (TEXT) publish date for the book
	publisher -- (TEXT) publisher of the book
	isbn13 -- (TEXT)the isbn13 number for the book
	settings -- (TEXT) the background settings of the book.
	characters -- (LIST) major characters in the book
	amazon_link -- (TEXT) the link on Amazon to purchase the book.
	description -- (TEXT) a brief introduction to the book.


REQUEST: 
/books/<id>

RESPONSE: a JSON dictionary representing one book that have the following fields.

	id -- (INTEGER) id of the book
	serial_id -- (INTEGER) id of the series that contain the book
	title -- (TEXT) the title of the book.
	cover_link -- (TEXT) the URL link for the cover picture.
	rating_count -- (INTEGER) number of ratings this book received.
	review_count -- (INTEGER) number of reviews this book received.
	average_rate -- (FLOAT) the average rating that this book received.
	number_of_page -- (INTEGER) number of pages this book has.
	date_published -- (TEXT) publish date for the book
	publisher -- (TEXT) publisher of the book
	isbn13 -- (TEXT)the isbn13 number for the book
	settings -- (TEXT) the background settings of the book.
	characters -- (LIST) major characters in the book
	amazon_link -- (TEXT) the link on Amazon to purchase the book.
	description -- (TEXT) a brief introduction to the book.
  

REQUEST:
/books/search?title={title}&genres={genres}&setting={setting}&character={character}&isbn13={isbn13}

GET parameters
    title (Optional, default: '') -- return the book with title contains the search string, case-insensitively

	genres (Optional, default: '') -- return the book with genre contains the search string, case-insensitively

	setting (Optional, default: '') -- return the book with setting contains the search string, case-insensitively

	character (Optional, default: '') -- return the book with character contains the search string, case-insensitively

	isbn13 (Optional, default: '') -- return the book with isbn13 number equal to the search string, case-insensitively

RESPONSE: a JSON list of dictionaries, each of which represents one book that match the search constraints. Each book dictionary will have the following fields.

	id -- (INTEGER) id of the book
	serial_id -- (INTEGER) id of the series that contain the book
	title -- (TEXT) the title of the book.
	cover_link -- (TEXT) the URL link for the cover picture.
	rating_count -- (INTEGER) number of ratings this book received.
	review_count -- (INTEGER) number of reviews this book received.
	average_rate -- (FLOAT) the average rating that this book received.
	number_of_page -- (INTEGER) number of pages this book has.
	date_published -- (TEXT) publish date for the book
	publisher -- (TEXT) publisher of the book
	isbn13 -- (TEXT)the isbn13 number for the book
	settings -- (TEXT) the background settings of the book.
	characters -- (LIST) major characters in the book
	amazon_link -- (TEXT) the link on Amazon to purchase the book.
	description -- (TEXT) a brief introduction to the book.


REQUEST:
/books/recommendation/<id>

RESPONSE: a JSON list of books recommended for the book specified by id. The book will have the following fields.

	id -- (INTEGER) id of the book
	serial_id -- (INTEGER) id of the series that contain the book
	title -- (TEXT) the title of the book.
	cover_link -- (TEXT) the URL link for the cover picture.
	rating_count -- (INTEGER) number of ratings this book received.
	review_count -- (INTEGER) number of reviews this book received.
	average_rate -- (FLOAT) the average rating that this book received.
	number_of_page -- (INTEGER) number of pages this book has.
	date_published -- (TEXT) publish date for the book
	publisher -- (TEXT) publisher of the book
	isbn13 -- (TEXT)the isbn13 number for the book
	settings -- (TEXT) the background settings of the book.
	characters -- (LIST) major characters in the book
	amazon_link -- (TEXT) the link on Amazon to purchase the book.
	description -- (TEXT) a brief introduction to the book.


REQUEST:
/books/author/<book_id>

RESPONSE: a JSON dictionary about the author of the book specified by book_id

	full_name -- (TEXT) the full name of the author.
	cover-link -- (TEXT) the link to the picture of the author.


REQUEST: 
/genres

RESPONSE: a JSON list of 10 random genres by name